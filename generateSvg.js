const fs = require('fs');
const fetch = require('node-fetch');

// Arte ASCII descompuesto en l√≠neas
// const asciiArtLines = [
//   "---------------------------------##########-------------------------",
//   "----------------------------##################----------------------",
//   "-------------------------###-             .+##----------------------",
//   "---------------------###+-                   \-----------------------",
//   "-------------------####-.    +++####+.        |----------------------",
//   "-------------------###+.   .---..-----. .+###+-----------------------",
//   "-------------------##+-    .--###+#++   .-.  .-----------------------",
//   "------------------+..--     ..-++++-.   -####.----------------------",
//   "------------------ - #         ...       -+--.                       ",
//   "------------------++ +.         ....         \                       ",
//   "-------------------.##         ..-- #+--.    |                     ",
//   "--------------------+##+-.    ---+###+-      -                      ",
//   "---------------------####+. .+##########.   #                       ",
//   "----------------------#######+--++-....-####                         ",
//   "-------------------------#################                           ",
//   "----------------##.     .-###############                            ",
//   "-----------######+.     ....--+--..   ########                       ",
//   "-----########+###+--..........        ##########                     ",
//   "####################.....           .##################              ",
//   "#######################+-.   .-#########################-++          "
// ];

// Informaci√≥n "About Me" descompuesta en l√≠neas
const aboutMeLines = [
  "About Me",
  "- üëÅÔ∏è‚Äçüó®Ô∏è I'm currently working at Zoega LTD. as FrontEnd Developer making a SPA Progressive Web Application with ReactJS,",
  "  Typescript, API REST, Context, Router, Yup, VideoJS, Webcam recording, Payment Processors like Paxum, PXP, Stripe",
  "  or SEPA/SWIFT, graphic stats with ChartJS, Drag and Drop, optimistic asynchronous, Biometrical verification with Veriff,",
  "  CSS/SASS/Tailwind, Vite, MJML, AWS, Cognito and Lambda, Figma, AGILE with Sprints on JIRA, and Bitbucket, CI/CD workflow.",
  "  Defining tasks and coordinating Frontend team and requirements with Backend.",
  "- üîç Open to interesting job offers.",
  "- ‚ÑπÔ∏è Most of my repositories are hidden or in other platforms like Bitbucket.",
  "- üî≠ I‚Äôm currently using HTML, CSS/SASS, JS ES6+, Typescript, ReactJS, NextJS.",
  "- üå± I‚Äôm currently playing with Rust, LLM, GAN, Gaussian Splatting...",
  "- üí¨ You can ask me also about Graphic Design: UI/UX, 2D, 3D, MoGraph, Video Filming and Edit, VFX, Photography or any other kind.",
  "- üì´ Reach me on Discord: Nebe#8185",
  "- ‚ö° Fun fact: I make music sometimes.",
  "Check my other works at https://www.nebeworks.com",
  "Check my other links at https://nebe.bio.link/"
];

const nameAndTitleLines = [
  "Name: Oscar 'Nebe' Abad aka N3BB3Z4R",
  "Title: FrontEnd Developer",
]

// const detailedAsciiLines = [
//   "                                                          ##**####****",
//   "                                                       ##**#*#***********",
//   "                                                 #############************",
//   "                                             #####*################********",
//   "                                           #*##***++==++++=======++********",
//   "                                        #####*=-----:::--::::::::....-++****",
//   "                                       ####*-::::::::--::::::::::::....-++",
//   "                                     ####*+-::::::::---:::::---:-:::.....:",
//   "                                   #####*+=-:::::--------------:::::::.....",
//   "                                  #%###*++=::::::-:::::::::::::::::::......:",
//   "                                 %%%#*+++=-::::::-+++++===-:::::::::.........",
//   "                                 %%#**===-:::::-+*#**#####**=-::::::.........",
//   "                                %%#**++=:::::-++=====++***#*+=--:::--==-:....-",
//   "                               %%#***+=:::::-=========+++++++==----=*****+=::-",
//   "                               %##*+++-:::::-====-----==++++==----==++*****+--",
//   "                               ##**++=:.::::-==--=+++===++++=--:::-========++=",
//   "                               #**+++=.::.:--=+*+=#%#+-**++*=-:..:=++=-:.:=-=+",
//   "                             .:-+=-+*-::.:::-==-=+*##+++++++-::..:=***+-..:===",
//   "                            :++=-==*+.:::::::---==++**+++==-::...:+*#%%#*=:--=",
//   "                           :-+-=+-=#-:::.::::::-----====---::::..:-+*#%#+#=-:",
//   "                           :=:-=+-+*-:::.:::::-------==--::::::..:::=++===-::",
//   "                           :--=+*==*=:::::----------===-:::::::..::...:::...:",
//   "                           :-=+*+:=*+::::------------==--:::::::.:::........-",
//   "                           .--+++=+#*=:::---------======-:::::--::::........-",
//   "                            .--:=-+##*-:---------====+++-+%*+=++=-:::...:..:",
//   "                            .:--:=+###=------:----==++====+=++*%#=:::::::::-",
//   "                             ::=++*###++=--:::---==+===*##***+=+-:-::::::::=",
//   "                                 -*#*#*++=--:-:-==+++*#%%%##%###*--:::::::=*",
//   "                                 :*#***+**=--:-=+*###%%%%%%%%%%%#*-::::::-*",
//   "                                 :+###*+**+=--+*##%###*####%%%%%##+-::::-**",
//   "                                 :=###*+**#+=+##%%#######****###%%#+-:-=**",
//   "                                 :=*####*##***#%#*+++++**#########%*+-+*#",
//   "                                 .:#%#####%#*###*+==+==++=-=---=*###**###",
//   "                                ..:-########*##**+=++*****+==-=--*#####%",
//   "                                ..::-+%#%%#**###******##%%###*+=+*###%%",
//   "                                ..::--+*###***#########%%%%%##*****#%%",
//   "                               :..:::--=*#*#####%%%%##%%%%%***#####%#",
//   "                               ...:::---=*##%%%%%%%%%%%%%%#*##%%%####",
//   "                            @@*..::::----=##%@%@@@@@@@%@@%%%#%%%%##",
//   "                         @@@@%..:::::---==+#%@%@@@@@@@@@@@@@@%%%%#",
//   "                        %%@@@-..:::::---====+*@@@@@@@@@@@@@@@@@%%%",
//   "                     @%%%%@@+:.:::::-----=====+#%@@@@@@@@@@@@%+%@@%@",
//   "                    %%%%%%%#+-::::::-----======++**%%%%%%%#*=-:@@%%@@%%",
//   "                   %%%@%%@%#+=---::-----========+++++=----:::::@@@@@%%%@@@@",
//   "               @%@##%%*#%%#*+++==-------====-=======---::::::::@@@@@@@@@@@@@@@",
//   "        +##**#%%@##%%+*###**++=====------==---------::::::::::-@@@@@@@@@@@@@@@@",
//   "   *+***####%%%@@##%****%%*+++=========----=--=---::::....::::=%@@@@@@@@@@@@@@@",
//   "*****#%%%@@@@@@@@###*##*%%##+++=========-----===---:::...:::::=%@@@@@@@@@@@@@@@%",
//   "##*###%@@%@@@@@@@###*####%#%@#+=========--:--------::::..::::-*@@@@@@@@@@@@@@@@##%@%#=+",
//   "%%%#%@@@@@@@@@@@@###*###%%#@@@@%==---===--:::------::::..::--#@@@@@@@@@@@@@@%@@@@@%%%%***",
//   "%%%%%@@%%@@@@@@@@###*##*%@@@@@@@=-----==--:::::------:..::-*%@@@@@@@@@@@@@@@@@@@@@%%#@%**++",
//   "%%%%%@@@@@@@@@@@@######%@@@@@@@@#%#+-::---:...:::------+#%%@@@@@@@@@@@@@@@@@@@@@@@@@%%#*#**+=*+",
//   "%%%%%@@@@@@@@@@@@%####@@@@@@@@@%%@@@@@%%%##*****##%@@@@@@@@@@@@@@@@@@@@@@@@@@@%@@@@@@%@@#***++++=+"
// ];

const detailedAsciiLines = [
"                                                        ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñí                             ",
"                                                      ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñí‚ñí‚ñí‚ñë                          ",
"                                                ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñí‚ñë‚ñë‚ñë‚ñë‚ñë‚ñí‚ñí                         ",
"                                            ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñí‚ñí                        ",
"                                          ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñì‚ñì‚ñì‚ñí‚ñí‚ñí‚ñí‚ñí‚ñë‚ñë‚ñí‚ñí‚ñë‚ñí‚ñí                        ",
"                                       ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñí‚ñí‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñì‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí                       ",
"                                      ‚ñë‚ñë‚ñë‚ñë‚ñí‚ñì‚ñà‚ñà‚ñà‚ñà‚ñì‚ñì‚ñà‚ñì‚ñì‚ñì‚ñì‚ñì‚ñà‚ñà‚ñà‚ñà‚ñì‚ñì‚ñì‚ñì‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà‚ñì‚ñí‚ñí                         ",
"                                    ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñí‚ñì‚ñà‚ñà‚ñà‚ñà‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà                         ",
"                                  ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñí‚ñí‚ñì‚ñà‚ñì‚ñà‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà                        ",
"                                 ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñí‚ñí‚ñì‚ñì‚ñà‚ñì‚ñà‚ñì‚ñì‚ñì‚ñà‚ñà‚ñà‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà                       ",
"                                ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñí‚ñí‚ñí‚ñí‚ñì‚ñà‚ñì‚ñà‚ñì‚ñì‚ñì‚ñì‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñì‚ñì‚ñì‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà                      ",
"                                ‚ñë‚ñë‚ñë‚ñë‚ñí‚ñí‚ñì‚ñì‚ñì‚ñà‚ñà‚ñì‚ñì‚ñà‚ñì‚ñí‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñí‚ñì‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà                      ",
"                               ‚ñë‚ñë‚ñë‚ñë‚ñí‚ñí‚ñí‚ñì‚ñì‚ñà‚ñà‚ñà‚ñà‚ñì‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñë‚ñë‚ñë‚ñë‚ñí‚ñí‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñí‚ñì‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà‚ñì                     ",
"                              ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñí‚ñí‚ñì‚ñì‚ñà‚ñà‚ñà‚ñà‚ñì‚ñì‚ñí‚ñì‚ñí‚ñí‚ñí‚ñì‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñì‚ñì‚ñì‚ñì‚ñì‚ñí‚ñí‚ñë‚ñë‚ñë‚ñí‚ñí‚ñì‚ñì‚ñà‚ñì                     ",
"                              ‚ñë‚ñë‚ñë‚ñí‚ñí‚ñí‚ñí‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà‚ñì‚ñì‚ñí‚ñí‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñí‚ñí‚ñí‚ñí‚ñí‚ñë‚ñë‚ñí‚ñí‚ñì‚ñì                     ",
"                              ‚ñë‚ñë‚ñë‚ñí‚ñí‚ñí‚ñí‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà‚ñì‚ñì‚ñí‚ñì‚ñì‚ñì‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñì‚ñì‚ñì‚ñà‚ñà‚ñì‚ñì‚ñì‚ñí‚ñí‚ñì‚ñì‚ñì‚ñí‚ñí‚ñí‚ñí‚ñí                     ",
"                              ‚ñë‚ñë‚ñí‚ñí‚ñí‚ñí‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà‚ñì‚ñì‚ñí‚ñí‚ñí‚ñí‚ñì‚ñë ‚ñë‚ñí‚ñì‚ñë‚ñë‚ñí‚ñí‚ñí‚ñí‚ñì‚ñà‚ñà‚ñà‚ñì‚ñì‚ñí‚ñí‚ñì‚ñì‚ñà‚ñà‚ñà‚ñì‚ñì‚ñì‚ñí                     ",
"                            ‚ñà‚ñà‚ñì‚ñí‚ñí‚ñì‚ñí‚ñí‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñí‚ñë‚ñë‚ñë‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñì‚ñì‚ñà‚ñà‚ñà‚ñì‚ñí‚ñë‚ñë‚ñí‚ñí‚ñì‚ñà‚ñà‚ñì‚ñì‚ñì‚ñí                     ",
"                           ‚ñì‚ñí‚ñí‚ñí‚ñì‚ñì‚ñì‚ñí‚ñí‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñì‚ñì‚ñì‚ñì‚ñà‚ñà‚ñà‚ñà‚ñí‚ñí‚ñë‚ñë‚ñë‚ñë‚ñí‚ñí‚ñì‚ñì‚ñì‚ñí                     ",
"                          ‚ñà‚ñì‚ñí‚ñì‚ñí‚ñí‚ñì‚ñí‚ñë‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñì‚ñà‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà‚ñì‚ñí‚ñë‚ñë‚ñë‚ñë‚ñí‚ñë‚ñí‚ñì‚ñà                      ",
"                          ‚ñà‚ñí‚ñì‚ñì‚ñì‚ñí‚ñì‚ñí‚ñë‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñà‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñí‚ñí‚ñí‚ñì‚ñí‚ñì‚ñì‚ñì‚ñì                      ",
"                          ‚ñà‚ñì‚ñì‚ñí‚ñí‚ñë‚ñì‚ñì‚ñë‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñì‚ñì‚ñà‚ñà‚ñà‚ñà‚ñì                      ",
"                          ‚ñà‚ñì‚ñí‚ñí‚ñí‚ñí‚ñà‚ñì‚ñí‚ñí‚ñì‚ñì‚ñà‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñà‚ñà‚ñà‚ñà‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñì                      ",
"                          ‚ñà‚ñì‚ñì‚ñí‚ñí‚ñí‚ñí‚ñí‚ñë‚ñë‚ñí‚ñà‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñí‚ñí‚ñì‚ñà‚ñì‚ñì‚ñà‚ñì‚ñì‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñì                      ",
"                           ‚ñà‚ñì‚ñì‚ñì‚ñì‚ñì‚ñí‚ñë‚ñë‚ñí‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñí‚ñí‚ñí‚ñí‚ñì‚ñí‚ñë‚ñë‚ñí‚ñí‚ñí‚ñí‚ñì‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà                       ",
"                           ‚ñà‚ñà‚ñì‚ñì‚ñì‚ñì‚ñí‚ñë‚ñë‚ñë‚ñí‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñí‚ñí‚ñí‚ñí‚ñì‚ñì‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñë‚ñë‚ñì‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñì                       ",
"                            ‚ñì‚ñì‚ñì‚ñí‚ñí‚ñí‚ñë‚ñë‚ñë‚ñí‚ñí‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñí‚ñí‚ñí‚ñì‚ñí‚ñí‚ñë‚ñë‚ñë‚ñë‚ñí‚ñí‚ñí‚ñí‚ñì‚ñì‚ñì‚ñì‚ñì‚ñà‚ñà‚ñì‚ñì‚ñì‚ñì‚ñí                       ",
"                                ‚ñì‚ñí‚ñë‚ñí‚ñë‚ñë‚ñí‚ñí‚ñí‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñí‚ñí‚ñí‚ñí‚ñí‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë ‚ñë‚ñë‚ñë‚ñë‚ñì‚ñì‚ñì‚ñà‚ñà‚ñì‚ñì‚ñì‚ñì‚ñí‚ñí                       ",
"                                ‚ñì‚ñí‚ñë‚ñë‚ñí‚ñí‚ñí‚ñë‚ñí‚ñí‚ñì‚ñì‚ñì‚ñì‚ñí‚ñí‚ñë‚ñë‚ñë‚ñë‚ñë    ‚ñë  ‚ñë‚ñë ‚ñë‚ñí‚ñì‚ñì‚ñà‚ñà‚ñà‚ñì‚ñì‚ñì‚ñë                        ",
"                                ‚ñà‚ñí‚ñë‚ñë‚ñë‚ñí‚ñí‚ñí‚ñë‚ñí‚ñí‚ñì‚ñì‚ñí‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë    ‚ñë‚ñë‚ñë‚ñí‚ñì‚ñà‚ñà‚ñà‚ñì‚ñì‚ñí‚ñí                        ",
"                                ‚ñà‚ñí‚ñë‚ñë‚ñë‚ñë‚ñí‚ñí‚ñë‚ñë‚ñí‚ñí‚ñí‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñí‚ñì‚ñà‚ñì‚ñì‚ñë‚ñë                         ",
"                                ‚ñà‚ñì‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñí‚ñë‚ñë‚ñë‚ñë‚ñë‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñí‚ñì‚ñí‚ñë‚ñë                          ",
"                                ‚ñà‚ñì‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñí‚ñí‚ñì‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñì‚ñì‚ñì‚ñì‚ñì‚ñí‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë                          ",
"                               ‚ñà‚ñà‚ñà‚ñì‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñë‚ñë‚ñë‚ñí‚ñí‚ñí‚ñí‚ñì‚ñì‚ñì‚ñì‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë                            ",
"                               ‚ñà‚ñà‚ñà‚ñì‚ñì‚ñí‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñí‚ñí‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñí‚ñí‚ñí‚ñí‚ñë‚ñë‚ñë‚ñë‚ñë                            ",
"                               ‚ñà‚ñà‚ñà‚ñà‚ñì‚ñì‚ñí‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë    ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë                              ",
"                              ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñì‚ñì‚ñì‚ñí‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë  ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë                              ",
"                              ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñì‚ñì‚ñì‚ñì‚ñí‚ñí‚ñë‚ñë‚ñë ‚ñë           ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë                              ",
"                             ‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñë‚ñë               ‚ñë‚ñë ‚ñë ‚ñë‚ñë‚ñë                                ",
"                             ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñí‚ñë                   ‚ñë‚ñë‚ñë                                 ",
"                            ‚ñì‚ñà‚ñà‚ñà‚ñà‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñí‚ñë                   ‚ñë                                 ",
"                           ‚ñí‚ñì‚ñà‚ñà‚ñà‚ñà‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñí‚ñí‚ñë             ‚ñë‚ñí                                    ",
"                          ‚ñë‚ñí‚ñì‚ñì‚ñà‚ñà‚ñà‚ñà‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñí‚ñí‚ñí‚ñí‚ñí‚ñë     ‚ñë‚ñë‚ñë‚ñí‚ñí‚ñì‚ñì       ‚ñë                            ",
"                  ‚ñë       ‚ñë‚ñí‚ñí‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñà‚ñà‚ñì‚ñì                                    ",
"                 ‚ñë‚ñë  ‚ñë‚ñë  ‚ñë‚ñë‚ñí‚ñí‚ñí‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà‚ñì                                    ",
"        ‚ñí‚ñë‚ñë‚ñë‚ñë‚ñë   ‚ñë‚ñë ‚ñë‚ñí‚ñë‚ñë‚ñë‚ñë‚ñë‚ñí‚ñí‚ñí‚ñí‚ñí‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñì                                   ",
"   ‚ñë‚ñí‚ñí‚ñí‚ñë‚ñë‚ñë‚ñë‚ñë     ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñí‚ñë‚ñë‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñì                                   ",
"‚ñí‚ñí‚ñë‚ñí‚ñí‚ñë‚ñë ‚ñë        ‚ñë‚ñë‚ñë‚ñí‚ñë‚ñë‚ñë  ‚ñë‚ñë‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñì‚ñì‚ñí‚ñí‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñì‚ñà‚ñì‚ñí                                   ", 
"‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë           ‚ñë‚ñë‚ñë‚ñí‚ñë‚ñë‚ñë‚ñë ‚ñë  ‚ñë‚ñí‚ñí‚ñì‚ñì‚ñì‚ñì‚ñì‚ñí‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñì‚ñì‚ñì‚ñì‚ñë                ‚ñë‚ñë‚ñë  ‚ñë‚ñí‚ñí           ", 
"   ‚ñë‚ñë            ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë ‚ñë    ‚ñë‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñà‚ñà‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñì‚ñì‚ñì‚ñë              ‚ñë       ‚ñë ‚ñë‚ñë‚ñë         ",
"   ‚ñë             ‚ñë‚ñë‚ñë‚ñí‚ñë‚ñë‚ñë        ‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñà‚ñà‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñà‚ñà‚ñà‚ñì‚ñì‚ñí                      ‚ñë‚ñë‚ñë  ‚ñë‚ñë‚ñí‚ñí       ",
"                 ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë         ‚ñë ‚ñë‚ñí‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñí‚ñë‚ñë                            ‚ñë‚ñë‚ñë‚ñë‚ñí‚ñí‚ñì‚ñë‚ñí   ",
"                  ‚ñë‚ñë‚ñë‚ñë                  ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë                                     ‚ñë‚ñë‚ñë‚ñë‚ñí‚ñí‚ñí‚ñí‚ñì‚ñí"
];


async function fetchGithubStats(username) {
  const url = `https://api.github.com/users/${username}`;
  console.log(`Fetching GitHub stats from: ${url}`);

  try {
    const response = await fetch(url);
    const data = await response.json();

    const publicRepos = data.public_repos || 0;
    const followers = data.followers || 0;

    const reposUrl = data.repos_url;
    const reposResponse = await fetch(reposUrl);
    const reposData = await reposResponse.json();

    const stars = reposData.reduce((acc, repo) => acc + (repo.stargazers_count || 0), 0);

    console.log(`Fetched stats - Repos: ${publicRepos}, Stars: ${stars}, Followers: ${followers}`);
    return { publicRepos, followers, stars };
  } catch (error) {
    console.error("Error fetching GitHub stats:", error);
    return { publicRepos: 0, followers: 0, stars: 0 };
  }
}

async function generateSvg() {
  try {
    const username = 'N3BB3Z4R';
    const stats = await fetchGithubStats(username);
    const currentDateTime = new Date().toLocaleString();

    let svgContent = `<svg xmlns="http://www.w3.org/2000/svg" width="1200" height="1600">
      <rect width="100%" height="100%" fill="#151515"/>`;

    // Generar el bloque de arte ASCII
    detailedAsciiLines.forEach((line, index) => {
      svgContent += `<text x="30" y="${50 + index * 10}" style="font-size: 10px; font-family: monospace;" fill="#00FF00">${line}</text>`;
    });

    // Generar el bloque de arte ASCII
    // asciiArtLines.forEach((line, index) => {
    //   svgContent += `<text x="30" y="${50 + index * 20}" style="font-size: 10px; font-family: monospace;" fill="#00FF00">${line}</text>`;
    // });

    // Generar el bloque de "About Me"
    aboutMeLines.forEach((line, index) => {
      svgContent += `<text x="400" y="${50 + index * 20}" style="font-size: 18px; font-family: Arial, sans-serif;" fill="#FFD700">${line}</text>`;
    });

    // Generar las estad√≠sticas de GitHub
    svgContent += `
    <text x="400" y="470" fill="#22ff22" style="font-size: 18px; font-family: Arial, sans-serif;">
    GitHub Stats:
    </text>
    <text x="400" y="500" fill="#FFFFFF" style="font-size: 16px; font-family: Arial, sans-serif;">
    Repos: ${stats.publicRepos} | Stars: ${stats.stars} | Followers: ${stats.followers}
    </text>
    <text x="400" y="530" fill="#FFFFFF" style="font-size: 12px; font-family: Arial, sans-serif;">
    Generated on: ${currentDateTime}
    </text>
    <text x="400" y="560" fill="#FFFFFF" style="font-size: 12px; font-family: Arial, sans-serif;">
      ${nameAndTitleLines}
    </text>
    </svg>`;

    console.log("Contenido del SVG:", svgContent);

    fs.writeFileSync('profile-stats.svg', svgContent);
    console.log("Archivo SVG generado correctamente.");
  } catch (error) {
    console.error("Error generando el SVG:", error);
  }
}

generateSvg();
